<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN" "http://forrest.apache.org/dtd/document-v20.dtd">
<document> 
  <header> 
    <title>Development</title> 
  </header> 
  <body> 
    <section>
      <title>About the Driver</title>
      <p>
        The PostgreSQL JDBC driver has some unique properties that you
	should be aware of before starting to develop any code for it.
	The current development driver supports six server versions and
	six java environments.  This doesn't mean that every feature must
	work in every combination, but a reasonable behaviour must be
	provided for non-supported versions.  While this extra compatibility
	sounds like a lot of work, the actual goal is to reduce the amount
	of work by maintaining only one code base.
      </p>
    </section>

    <section>
      <title>Tools</title>
      <p>
        The following tools are required to build and test the driver:
      </p>
      <ul>
        <li><a href="http://java.sun.com/j2se">Java 2 Standard Edition Development Kit</a> At least JDK 1.2.</li>
	<li><a href="http://ant.apache.org">Apache Ant</a> At least 1.5.</li>
	<li><a href="http://www.junit.org">JUnit</a> At least 3.7.</li>
	<li><a href="http://git-scm.com">GIT</a></li>
      </ul>
    </section>

    <section>
      <title>Build Process</title>
      <p>
        After retrieving the source from the
        <a href="site:git">git repository</a>.
	Move into the top level <code>pgjdbc</code> directory and simply
	type <code>ant</code>.  This will build the appropriate driver for
	your current Java version and place it into
	<code>jars/postgresql.jar</code>.
      </p>
    </section>

    <section>
      <title>Test Suite</title>
      <p>
        To make sure the driver is working as expected there are a set of
	JUnit tests that should be run.  These require a database to run
	against that has the plpgsql procedural language installed.  The
	default parameters for username and database are "test", and for
	password it's "password".
	so a sample interaction to set this up would look the following, if
	you enter "password" when asked for it:
      </p>

<source>
postgres@host:~$ createuser -d -A test -P
Enter password for user "test": 
Enter it again: 
CREATE USER

postgres@host:~$ createdb -U test test
CREATE DATABASE

postgres@host:~$ createlang plpgsql test
</source>

      <p>
        Now we're ready to run the tests, we simply type <code>ant test</code>,
	and it should be off and running.  To use non default values to run
	the regression tests, you can create a
	<code>build.local.properties</code> in the top level directory.
	This properties file allows you to set values for host, database,
	user, password, and port with the standard properties "key = value"
	usage.  The ability to set the port value makes it easy to run the
	tests against a number of different server versions on the same
	machine.
      </p>

    </section>

  </body>
</document>

